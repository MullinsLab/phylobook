# Add a unique secret key string. For more information see https://docs.djangoproject.com/en/4.0/ref/settings/#secret-key
# Secret key is a unique key that you are required to provide to Django.
# If you have python3 installed on your system, you can issue the following command to generate a secret key:
# python3 -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=

# Set debug off (0) or on (1)
# If this is set to 1, then errors will be displayed in the client browser window.  Set to 1 if you are needing to debug a problem.
# Default is 0.
DEBUG=0

# Set the hosts (separated by a space) that are allowed to access this application.
# Default is "localhost 127.0.0.1" which limits to only localhost requests.
# If you are using a domain name for public use, you will need to add it to the list.
# E.g. localhost 127.0.0.1 myserver.domain.com
DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1

# Set the path to the data directory.  This is where Phylobook finds the project folders to display.
# E.g. /data
PROJECT_PATH=

# Set the server name
# E.g. phylobook.mullins.microbiol.washington.edu
SERVER_NAME=

# Set the email settings for password reset emails
# These settings are used for password reset email requests.  If you are running a stand-alone installation, you can leave the settings as is.
# Below is an example of the configuration of EMAIL_HOST, EMAIL_USE_TLS, EMAIL_PORT for office365 exchange.
# In the case of office365, EMAIL_HOST_USER is an email address and EMAIL_HOST_PASSWORD is obviously the password.
# Other email host settings may vary, please add your host specific email settings.
EMAIL_HOST=outlook.office365.com
# EMAIL_USE_TLS (1 or 0) 1=True 0=False
EMAIL_USE_TLS=1
EMAIL_PORT=587
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=

# DB configuration
# Add a password to DB_PASS.
DB_USER=postgres  # Use custom name or leave as "postgres"
DB_NAME=postgres # Use custom name or leave as "phylobook"
DB_PASS=          # Add a secure password for the database

# There are 3 types of LOGIN_TYPE authentication - "local" (default), "sso", and "dual".
# An IT professional will be required to configure "sso" and "dual".  If you are not familiar with SAML,
# please leave the default "local".
# Please choose the one that you prefer:
# local - locally managed accounts with passwords stored encrypted (default)
# sso - SAML supported single sign on only
# dual - supports both single sign on and locally managed acounts
LOGIN_TYPE=local

# Do not change this setting.
LOGIN_URL=/login

# For LOGIN_TYPE=dual, uncomment and change the labels to fit your institution
#LOGIN_SSO_TITLE=UW Login >>
#LOGIN_SSO_COLLABORATOR_TITLE=Collaborator account:
